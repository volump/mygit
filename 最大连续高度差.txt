一段爬坡路被定义为至少两个连续的上升数列。例如，我们考虑如下路线数列12 3 5 7 10 6 1 11，这里有两个爬坡，第一个爬坡（3 5 7 10）的高度差是7，第二个爬坡的高度差是10（1 11）。

帮助Tomislav计算高度差最大的爬坡的高度差。

代码：
#include<iostream>
using namespace std;

int main() {
    int n;
    while(cin >> n) {
        int a[n];
        int b[n] = {0};
        for(int i = 0; i < n; i++) {
            cin >> a[i];
        }
        int maxn = 0;
        for(int i = 1; i < n; i++) {
            int m = a[i] - a[i-1];
            b[i] = m;
        }
        int sum = 0;
        for(int i = 1; i < n; i++){
            if(b[i] >= 0){
                sum += b[i];
            }
            if(maxn < sum){
                maxn = sum;
            }
            if(b[i] < 0){
                sum = 0;
            }
        }
        cout << maxn << endl;
    }
    return 0;
}
